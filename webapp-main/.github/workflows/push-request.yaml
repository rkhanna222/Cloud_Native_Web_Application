name: AMI Builder

on:
  push:
    branches: [ main ]

jobs:
  AMI_Builder:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'

      - name: Installing AWS cli
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update

      - name: Build Maven
        run: mvn clean install

      - name: Test
        run: mvn test -DskipTests=false

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Packer build
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-color=false -on-error=abort"
          target: ami.pkr.hcl
          working_directory: ami
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_PROFILE: ${{ secrets.AWS_PROFILE }}

      - name: Set AWS Prod credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: us-east-1

      - name: Copying ami Artifacts and Launching Template
        working-directory: ./ami
        run: |
          AMI_ID=$(jq -r '.builds[-1].artifact_id' manifest.json | cut -d ":" -f2)
          echo $AMI_ID
          LT_ID=$(aws ec2 describe-launch-templates --launch-template-name application-stack-launch-template | jq '.LaunchTemplates[].LaunchTemplateId')
          LT_ID="${LT_ID%\"}"
          LT_ID="${LT_ID#\"}"
          echo $LT_ID
          aws ec2 create-launch-template-version --launch-template-id $LT_ID --version-description WebVersion2 --source-version 1 --launch-template-data "ImageId=$AMI_ID"
          aws autoscaling update-auto-scaling-group --auto-scaling-group-name WebServerGroup --launch-template LaunchTemplateId=$LT_ID,Version='$Latest'

      - name: Refreshing Instances
        run: aws autoscaling start-instance-refresh --auto-scaling-group-name WebServerGroup